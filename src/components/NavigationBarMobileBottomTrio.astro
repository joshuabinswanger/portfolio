---
import RhizomLogoComponent from "../components/Logo.astro";
import Index from './Index.astro';
import BracketOpenH from './BracketOpenH.astro';
import BracketMiddleH from './BracketMiddleH.astro';
import BracketCloseH from './BracketCloseH.astro';
import "../styles/global.css";
---

<nav id="NavBarMobile" transition:persist>
  <div id="Logo">
    <RhizomLogoComponent/>
  </div>

  <div id="Menu">
    <div id="MainWrapper">
      <BracketOpenH />

      <!-- Menu item: Portfolio -->
      <a 
        class:list={["menu-items", "main-button"]} 
        href="/" 
        data-href="/">
        Portfolio
      </a>

      <BracketMiddleH />

      <!-- Archive submenu -->
      <div id="archive">
        <a       
          id="archive-main"
          class:list={["menu-items", "main-button"]}
          href="/archive-gallery"          
          data-href="/archive-gallery">
          Archive
        </a>
        <div id="archive-select">
          <a 
            class:list={["archive-subitems"]} 
            href="/archive-gallery"
            data-href="/archive-gallery">
            Gallery
          </a>
          <a 
            class:list={["archive-subitems"]} 
            href="/archive-project-list"
            data-href="/archive-project-list">
            List
          </a>
          <a 
            class:list={["archive-subitems"]} 
            href="/archive-projects"
            data-href="/archive-projects">
            Projects
          </a>
        </div>
      </div>

      <BracketMiddleH />

      <!-- Menu item: Information -->
      <a 
        class:list={["menu-items", "main-button"]} 
        href="/info" 
        data-href="/info">
        Information
      </a>

      <BracketCloseH />
    </div>
  </div>
</nav>

<style>
@import "../styles/global.css";

#NavBarMobile {
  display: block;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
}

#Logo {
  position: fixed;
  top: 11px;
  width: 27%;
  pointer-events: auto;
}

#Menu {
  position: fixed;
  bottom: 0;
  width: 100vw;
  background-color: var(--bg-color);
  z-index: 1001;
  padding-bottom: 2px;
}

#MainWrapper {
  height: 3rem;
  display: grid;
  grid-gap: 0;
  grid-template-columns: 0 1fr 0 1fr 0 1fr 0;
  justify-items: center;
  z-index: 1002;
}

/* Main button styling and active animation */
.main-button {
  position: relative;
  overflow: hidden;
  width: 100%;
  transition: color 0.5s ease;
}

/* The ::after pseudo-element creates the black bar that grows from the bottom */
.main-button::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 0%;
  background-color: black;
  transition: height 0.75s ease;
  z-index: -1;
}

.main-button.active {
  color: var(--bg-color);
}

.main-button.active::after {
  height: 100%;
}

/* General menu-items styling */
.menu-items {
  font-size: var(--font-size-dekstop-h1);
  font-family: PowerGrotesk-Light;
  font-weight: 200;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  cursor: pointer;
}

a {
  text-decoration: none;
  color: black;
  width: 100%;
  height: 100%;
}

/* Archive submenu styling */
#archive {
  display: grid;
  width: 100%;
  grid-template-columns: 1fr min-content;
  align-items: center;
}

#archive-select {
  display: none;
  justify-content: center;
  align-content: center;
  grid-template-columns: 1fr 1fr 1fr;
  padding-right: 3vw;
  width: 100%;
  height: 100%;
}

.archive-subitems {
  font-size: 11px;
  cursor: pointer;
  padding: 0 1vw;
  width: 100%;
  height: 100%;
}
</style>

<script>
  import { navigate } from 'astro:transitions/client';

  const navMobile = document.getElementById("NavBarMobile");

  // DEV code: simply use window.location.pathname
  if (import.meta.env.DEV) {
    document.addEventListener("astro:page-load", () => {
      updateActiveState(window.location.pathname);
    });
    navMobile.addEventListener("click", (e) => {
      const btn = e.target.closest('.main-button');
      if (btn) {
        updateActiveState(btn.getAttribute('data-href'));
      }
    });
  }

  // PROD code: update currentRoute using astro:before-swap
  if (import.meta.env.PROD) {
    let currentRoute = window.location.pathname;

    // Update currentRoute on navigation using astro:before-swap's detail.
    document.addEventListener("astro:before-swap", (event) => {
      if (event.detail && event.detail.url) {
        currentRoute = event.detail.url.pathname;
      }
    });

    document.addEventListener("astro:after-swap", () => {
      updateActiveState(currentRoute);
    });

    document.addEventListener("astro:before-preperation", (event) => {
      const buttons = navMobile.querySelectorAll('.main-button');
      let activeFound = false;
      buttons.forEach(btn => {
        if (btn.getAttribute('data-href') === currentRoute && btn.classList.contains('active')) {
          activeFound = true;
          btn.classList.remove('active');
        }
      });
      if (activeFound) {
        event.preventDefault();
        setTimeout(() => {
          event.detail.continue();
        }, 800);
      }
    });

    document.addEventListener("astro:page-load", () => {
      updateActiveState(currentRoute);
      const archiveSubitems = navMobile.querySelector('.archive-subitems');
      if (archiveSubitems) {
        archiveSubitems.onchange = (event) => {
          const href = event.target.value;
          navigate(href);
        };
      }
    });

    navMobile.addEventListener("click", (e) => {
      const btn = e.target.closest('.main-button');
      if (btn) {
        updateActiveState(btn.getAttribute('data-href'));
      }
    });
  }

  // Helper function to update the active class.
  function updateActiveState(route) {
    const buttons = navMobile.querySelectorAll('.main-button');
    buttons.forEach(btn => {
      if (btn.getAttribute('data-href') === route) {
        btn.classList.add('active');
      } else {
        btn.classList.remove('active');
      }
    });
  }
</script>

