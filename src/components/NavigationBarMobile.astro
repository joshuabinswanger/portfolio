---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';
import RhizomLogo from "../assets/Logo_V6_Dark.png"
import RhizomLogoComponent from "../components/Logo.astro"
import Index from './Index.astro';
import BracketOpenV from './BracketOpenV.astro';
import BracketMiddleV from './BracketMiddleV.astro';
import BracketCloseV from './BracketCloseV.astro';
import "../styles/global.css"

---
<div id="Logo">
  <RhizomLogoComponent/ >
</div>

<nav id="NavBarMobile">

  <input id="input" type="checkbox"></input>


  <div id="Hamburger">

    <span id="anim-span1"></span>
    <span id="anim-span2"></span>
    <span id="anim-span3"></span>
    
  </div> 
  
  <div id="Menu">
    <div id="MenuWrapper">

      <BracketOpenV />
        
        <a href="/" class:list={["MenuItems"]}>
          <p>Gallery</p>
        </a>

      <BracketMiddleV />

        <a href="/info" class:list={["MenuItems"]}>
          <p>About</p>
        </a>
      
      <BracketMiddleV />

        <a href="/contact" class:list={["MenuItems"]}>
          <p>Contact</p>
        </a>
      
      <BracketMiddleV />

        <a href="/links" class:list={["MenuItems"]}>
          <p>Links</p>
        </a>

      <BracketMiddleV />

        <a href="/archive" class:list={["MenuItems"]}>
          <p>Archive</p>
        </a>

      <BracketCloseV />
    </div>  
  </div>



    <div id="backdrop"></div>


</nav>

<script>
  // Wait for the page to fully load all DOM content
  document.addEventListener('astro:page-load', () => {
   
    const menuLinks = document.querySelectorAll('.menuLinks');

    const projectLinks = document.querySelectorAll('.projectLinks');

    const observers = document.querySelectorAll('.observer');
    // Get the checkbox input element that controls the nav toggle
    const navToggle = document.getElementById('input');

    //set menuLinks visible
    projectLinks.forEach(link => {
        link.classList.remove("linkHidden")
        link.classList.add("linkShow")
      }
    );

    // Add event listener to toggle the navigation
    navToggle.addEventListener('click', () => {
      console.log('NavBar Toggled');
      
      // For each observer element, modify its first child's classes
      observers.forEach(observer => {
        console.log(observer.firstElementChild); // Log the first child of the observer
        observer.firstElementChild.classList.remove("hidden"); // Remove 'hidden' class
        observer.firstElementChild.classList.add("show"); // Add 'show' class
      });
    });

    // Add click event listeners to each menu link
    menuLinks.forEach(link => {
      link.addEventListener('click', () => {
        // If the navigation toggle is checked, uncheck it
        if (navToggle.checked) {
          navToggle.checked = false;
        }
      });
    });

    if (window.location.pathname !== '/') {
      console.log('Not on the root page');
      //hide projectLinks
      projectLinks.forEach(link => {
        link.classList.remove("linkShow")
        link.classList.add("linkHidden")
      }
    )


    }
  });
</script>


<style>
@import "../styles/global.css";


#NavBarMobile {
  display: block;
  position: fixed;
  z-index: 1000;
  left: 0px;
  top: 0px;
}

#Logo {
  height: 100svh;
  pointer-events: auto;
} 

.button {
  width: auto;
  height: 33px;
  display: grid;
  place-items: center;
  margin: 0px;
}

#Menu {
  position: fixed;
  z-index: 1001;
  width: 100vw;
  height: 88vh;
  display: grid;
  place-items: center; /* centers #MenuWrapper both horizontally and vertically */
  visibility: hidden;
}

#MenuWrapper {
  visibility: hidden;
  opacity: 0;
  width: calc(min-content + 5vw);
  min-width: 44vw;
  padding: 0vw 28vw;
  height: min-content;
  display: grid;
  grid-gap: 0;
  grid-template-columns: 1fr; /* Make all elements stretch to 100% width */
  grid-auto-flow: row;
  justify-items: stretch; /* Ensure all children stretch horizontally */
  pointer-events: none;
  z-index: 1002;
  transition: opacity 1s cubic-bezier(0.33, 1, 0.68, 1)  0.2s;
}

.MenuItems {
  font-size: var(--font-size-dekstop-h1);
  font-family: PowerGrotesk-Light;
  font-weight: 200;
  width: 100%; /* Ensure each menu item takes full width */
  display: flex;
  justify-content: center; /* Center the content inside */
  align-items: center; /* Vertically center the content */
}

a {
  text-decoration: none; /* Removes underline */
  color: inherit; /* Inherits the color from the parent element */
  background: none; /* Removes background if any */
  border: none; /* Removes border if any */
  pointer-events: auto;
} 

p {
  font-size: var(--font-size-mobile-h1);
  margin: 0px;
  text-align: center;
}


#backdrop {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100lvh;
    background-color: #fbf9f400;
    backdrop-filter: blur(0);
    transition: backdrop-filter 1s cubic-bezier(0.33, 1, 0.68, 1) , background-color 1s cubic-bezier(0.33, 1, 0.68, 1) ;
    z-index: 998;
    pointer-events: none;
  }



#Hamburger {
  position: fixed;
  top: 15px;
  right: 20px;
  z-index: 999;

  span  {
    display: block;
    width: 30px;
    height: 2px;
    margin-bottom: 8px;
    position: relative;
    background: #000000;
    /* transform-origin: 4px 0px; */
  
    transition: transform 1s cubic-bezier(0.33, 1, 0.68, 1),
                opacity 1s cubic-bezier(0.33, 1, 0.68, 1);

  }

  #anim-span1{
    transform-origin: 0% 0%;
    transform-origin: 1px 1px;
  }

  #anim-span2{
    opacity: 1;
    transform-origin: 0% 100%;
  }

  #anim-span3{
    transform-origin: 0% 0%;
    transform-origin: 1px 1px;
  }
}

/* Animation */
#input {
  margin: 0;
  display: block;
  width: 60px;
  height: 60px;
  position: fixed;
  top: 0px;
  right: 0px;
  pointer-events: auto;
  cursor: pointer;
  
  opacity: 0; /* hide this */
  z-index: 1003; /* and place it over the hamburger */
  
  -webkit-touch-callout: none;
}

input:checked {
    ~ #backdrop {
      display: block;
      background-color: var(--bg-color-trans); /* Example style */
      backdrop-filter: blur(15px);
      pointer-events: auto;
    }
  }


input:checked {
  ~ #Hamburger{
    #anim-span1{
      transform: rotate(45deg);
    }

   #anim-span2{
      opacity: 0;
      transform: rotate(0deg) scale(0.2, 0.2);
    }

    #anim-span3{
      transform: rotate(-45deg);
    }
  }
}

input:checked{
    ~ #Menu{
      visibility: visible;
    }
}

input:checked {
  ~ #Menu{
   > #MenuWrapper{
        visibility: visible;
        opacity: 1;
      }
  }
}











</style>







