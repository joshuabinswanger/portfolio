---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';
import RhizomLogo from "../assets/Logo_V6_Dark.png"
import RhizomLogoComponent from "../components/Logo.astro"
import Index from './Index.astro';
import SquareBracketV from './SquareBracket_V.astro';
import "../styles/global.css"

---
<nav id="NavBarMobile">

  <div>
    <RhizomLogoComponent/ >
  </div>

  <input id="input" type="checkbox"></input>


  <div id="Hamburger">

    <span id="anim-span1"></span>
    <span id="anim-span2"></span>
    <span id="anim-span3"></span>
    
  </div> 
  
  <div id="MenuWrapper">
    <SquareBracketV>
      <Index />
    </SquareBracketV>

    <SquareBracketV>
      <a href="/" id="MenuItems">
        <p>Info</p>
      </a>
    </SquareBracketV>

    <SquareBracketV>
      <a href="/" id="MenuItems">
        <p>Contact</p>
      </a>
    </SquareBracketV>

    <SquareBracketV>
        <a href="/" id="MenuItems">
          <p>Links</p>
        </a>
   </SquareBracketV>

  </div>  



    <div id="backdrop"></div>


</nav>

<style>
@import "../styles/global.css";


#NavBarMobile {
  display: block;
  position: fixed;
  z-index: 1000;
  left: 0px;
  bottom: 0px;
}

.button {
  width: auto;
  height: 33px;
  display: grid;
  place-items: center;
  margin: 0px;
}

#MenuWrapper {
  position: fixed;
  visibility: hidden;
  top: 0;
  left: 0;
  padding-top: 15vh;
  padding-left: 28vw;
  width: 44vw;
  height: min-content;
  display: grid;
  grid-gap: 0;
  grid-template-columns: 1fr; /* Make all elements stretch to 100% width */
  grid-auto-flow: row;
  justify-items: stretch; /* Ensure all children stretch horizontally */
  z-index: 1000;
  pointer-events: none;
}

#MenuItems {
  width: 100%; /* Ensure each menu item takes full width */
  display: flex;
  justify-content: center; /* Center the content inside */
  align-items: center; /* Vertically center the content */
}

input:checked{
    ~ #MenuWrapper{
      visibility: visible;
    }
}

a {
  text-decoration: none; /* Removes underline */
  color: inherit; /* Inherits the color from the parent element */
  background: none; /* Removes background if any */
  border: none; /* Removes border if any */
} 

p {
  font-size: var(--font-size-mobile);
  margin: 0px;
  padding: 1rem 1rem 1rem 1rem;
  text-align: center;
}


#backdrop {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100lvh;
    background-color: rgba(255, 255, 255, 0);
    backdrop-filter: blur(0);
    transition: backdrop-filter 1s ease, background-color 1s ease;
    z-index: 998;
    pointer-events: none;
  }

  input:checked {
    ~ #backdrop {
      display: block;
      background-color: rgba(255, 255, 255, 0.88); /* Example style */
      backdrop-filter: blur(15px);
      pointer-events: auto;
    }
  }




#input {
  display: block;
  width: 44px;
  height: 44px;
  position: fixed;
  bottom: 0px;
  right: 10px;
  pointer-events: auto;
  cursor: pointer;
  
  opacity: 0; /* hide this */
  z-index: 1001; /* and place it over the hamburger */
  
  -webkit-touch-callout: none;
}

#Hamburger {
  position: fixed;
  bottom: 10px;
  right: 20px;
  z-index: 999;

  span  {
    display: block;
    width: 30px;
    height: 2px;
    margin-bottom: 8px;
    position: relative;
    background: #000000;
    /* transform-origin: 4px 0px; */
  
    transition: transform 1s ease,
                opacity 1s ease;

  }

  #anim-span1{
    transform-origin: 0% 0%;
    transform-origin: 1px 1px;
  }

  #anim-span2{
    opacity: 1;
    transform-origin: 0% 100%;
  }

  #anim-span3{
    transform-origin: 0% 0%;
    transform-origin: 1px 1px;
  }
}


input:checked {
  ~ #Hamburger{
    #anim-span1{
      transform: rotate(45deg);
    }

   #anim-span2{
      opacity: 0;
      transform: rotate(0deg) scale(0.2, 0.2);
    }

    #anim-span3{
      transform: rotate(-45deg);
    }
  }
}




</style>




