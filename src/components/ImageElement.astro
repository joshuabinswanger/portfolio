---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

import "../styles/global.css";

interface Props {
    margin_top?: string;
    width?: string;
    height?: string;
    aspectratio?: string;
    loading?: string;
    to: string;
    altText: string;
    imagePath: string;
    onhover_imagePath?: string;
    viewtransition_name?: string;
    
  };
  
// Get component props from Astro.props
const { margin_top = '0px', to, width = "100%", height = 'auto', aspectratio = 'auto', loading = 'lazy', imagePath, onhover_imagePath, viewtransition_name } = Astro.props;

//Import all image paths to check against the passed in strings
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/**/*.{jpeg,jpg,png,gif,webp}');

// Check if the image exists and assign it to myImage
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/**/*.{jpeg,jpg,png,gif,webp}"`);
const myImage = images[imagePath]();

---
<div id="Image">
    <a href={to}>
      <Picture  
      src={myImage} 
      formats={['avif', 'webp']}
      widths={[500, 1000, 1500, myImage.width]}
      sizes={'(max-width: 650px) 500px, (max-width: 1050px) 1000px, (max-width: 1800px) 1500x,  ${myImage.width}px'}
      alt="empty" 
      loading={loading}
      style={`
      width: ${width}; 
      height: ${height}; 
      object-fit: cover; 
      aspect-ratio: ${aspectratio}
      `}>
    </a> 
</div>





<style define:vars={{margin_top }}>

@import "../styles/global.css";

/*Fade */

.hidden{
  opacity: 0.22;
  filter: contrast(0.66) sepia(.8) blur(2px) grayscale(0.8);
  transition: all 1s ease;
  transform: translateY(10%);
}

.show {
  opacity: 1;
  filter:  contrast(1) brightness(1) sepia(0) blur(0px) grayscale(0);
  transform: translateY(0);
}



</style>